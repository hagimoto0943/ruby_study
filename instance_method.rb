# インスタンスメソッド

-------------------------------------------------------------------------
# インスタンスは、クラスで定義されたインスタンスメソッドを呼び出すことができる
# 継承したクラスのインスタンスは、スーパークラスで定義されたインスタンスメソッドを呼び出すことができる
-------------------------------------------------------------------------

# Rubyインタプリタが、どのように実行するメソッドを当k亭しているかを理解できると、
# 後述するモジュールや得意クラスの理解が容易になる
# そこで、呼び出されたメソッドが探索される経路を詳細に見ていきましょう

# クラスオブジェクト
-------------------------------------
# クラスとインスタンス

  ------- Fooクラス ------------
  |   オブジェクト - x          |
  |   foo1 - x                |
  |   foo2 - x                |
  -----------------------------
-------------------------------------

# プログラム上でオブジェクトの雛形がクラスです。
# クラスは、同じ性質を持つオブジェクトの集合とみなすこともできます。
# クラスからオブジェクトを生成することをインスタンス化と呼びます。

# 「学校のクラス」と同じ意味合いで捉えると、HTMLのクラス属性や、正規表現の文字クラスも同じ意味で使っている。

# 上の図では、x印でオブジェクトを表現しています。
# Rubyではクラスに対応するオブジェクトが生成されるため、
# Fooクラスに対応するオブジェクトもx印で配置してみましょう。

-------------------------------------
# クラスレイヤとクラスオブジェクト

------- クラスレイヤ ----------
|                           |
|          Foo              |
|           |               |
------------|----------------
      ------|------      
      |     |     |
-------------------------------------