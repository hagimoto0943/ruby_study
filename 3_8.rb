## 範囲

# 配列、ハッシュと、値の集合を表すリテラルを見てきました。これでRubyのキホ運的な値の操作が身につきました。
# 単純なプログラムであれば、ここまでの知識で対応できるでしょう。
# 応用的なリテラルである、範囲、正規表現、コマンド出力などを学びます。


# 範囲リテラル

1..5 # 1以上5以下
1...5 # 1以上5未満
'a'..'e' # 'a'以上'e'以下
'a'...'e' # 'a'以上'e'未満 

# include?メソッド
(1..5).include?(1) # => true
(1..5).include?(6) # => false
(1..5) == 3 # => false
(1..5) === 3 # => true
(1..5) === 9 # => false

# これらは範囲オブジェクトと呼ばれ、Rangeクラスのインスタンスとなります。
# 範囲オブジェクトは、include?メソッドをし使用して、引数で指定した値が範囲に含まれているかどうかを判定することができます。
# これは、===演算子でも同じ結果となります。
# 範囲オブジェクトでは、「==」は同値判定、「===」は包含判定となります。

# for文に範囲オブジェクトを適用
for i in 'a'..'z' do # iに'a'から'z'までの値が入る
  p i
end

# 範囲オブジェクトを配列の添字演算子に適用することで、その範囲の部分を中室するこpとができます。
# 先に述べたかんまによるy砲素数の指定との違いが重要なので、しっかりと区別するように。
# 添字演算子とは、配列やハッシュなどのコレクション型のデータに対して、特定の位置やキーにあるようにアクセスするための演算子です。
# 例えば、for文やeachなどがその例です。

# 配列の添字演算子に配列オブジェクトを適用

a = [1, 2, 3, 4, 5]
p a[2,3] # => [3, 4, 5]
p a[2..3] # => [3, 4]
p a[2...3] # => [3]

# 添字演算子は、数値を指定すると、その位置の文字列がかえります。範囲オブジェクトを指定すると、その部分を抽出した結果が帰ります。
# 範囲オブジェクトの動作は配列と同様なので、合わせて覚える。

