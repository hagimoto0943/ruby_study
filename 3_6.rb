## 配列
v1 = %w(a b c)
# => ["a", "b", "c"]

v1.join()
# => "abc"

v1.join(" ")
# => "a b c"

v1.join("_")
# => "a_b_c"

a = Array.new(3)
# => [nil, nil, nil]

Array.new(2){|index| index + 10}
# => [10, 11]

#　第二引数には、配列の要素を初期化するための値を指定できます。
#  第二引数で指定した初期値オブジェクトは、すべて同一のオブジェクトIDを持つ同一オブジェクトです。


a = Array.new(3, "foo")
# => ["foo", "foo", "foo"]: foo[0]とfoo[1]とfoo[2]は同じオブジェクトIDを持つ
a[0].replace("bar")　# a[0]だけでなく、a[1]とa[2]も変更される
p a # => ["bar", "bar", "bar"]


# replaceで全て置き換わらないように、以下のようにする
a = Array.new(3){"foo"}
a[0].replace("bar")
p a # => ["bar", "foo", "foo"]

# サイズを超えた要素への代入
v1 = [10] # => [10]
v1.length # => 1
v1[3] = 20 # サイズを超えて代入できる
v1.length # => 4
v1[2] # => nil
v1[100] 

# インデックスに負の数を指定
v1 = [10, 20, 30, 40, 50]
p v1[-1] # => 50
p v1[5-1] # => 50
p v1[-4] # => 40
p v1[5-4] # => 40

# 要素数の指定
a = [1,2,3,4]
p a[1,2] # => [2,3]
p a[1,3] # => [2,3,4]